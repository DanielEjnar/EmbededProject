// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _GenerationGenerator_generateGeneration_HH_
#define _GenerationGenerator_generateGeneration_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct GenerationGenerator_generateGeneration : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > startGenerating;
    sc_out< sc_logic > generatingDone;
    sc_out< sc_logic > generatingDone_ap_vld;
    sc_in< sc_lv<64> > generation_parent1;
    sc_in< sc_lv<64> > generation_parent2;
    sc_out< sc_lv<64> > generation_child1;
    sc_out< sc_logic > generation_child1_ap_vld;
    sc_out< sc_lv<64> > generation_child2;
    sc_out< sc_logic > generation_child2_ap_vld;
    sc_in< sc_lv<24> > mutation_probability;


    // Module declarations
    GenerationGenerator_generateGeneration(sc_module_name name);
    SC_HAS_PROCESS(GenerationGenerator_generateGeneration);

    ~GenerationGenerator_generateGeneration();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<64> > val_V_3_reg_323;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > val_V_4_reg_328;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_s_fu_227_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_333;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<7> > j_1_fu_239_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > child1_V_2_fu_266_p2;
    sc_signal< sc_lv<1> > exitcond1_fu_233_p2;
    sc_signal< sc_lv<7> > j_2_fu_278_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > child2_V_2_fu_305_p2;
    sc_signal< sc_lv<1> > exitcond_fu_272_p2;
    sc_signal< sc_lv<64> > v_V_reg_177;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<7> > j_reg_188;
    sc_signal< sc_lv<64> > v_V_1_reg_199;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<7> > j1_reg_210;
    sc_signal< sc_lv<1> > grp_read_fu_130_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<1> > tmp_1_fu_311_p2;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > j_cast3_fu_245_p1;
    sc_signal< sc_lv<32> > op2_assign_fu_249_p2;
    sc_signal< sc_lv<32> > child1_V_fu_255_p3;
    sc_signal< sc_lv<64> > child1_V_cast_fu_262_p1;
    sc_signal< sc_lv<32> > j1_cast2_fu_284_p1;
    sc_signal< sc_lv<32> > op2_assign_1_fu_288_p2;
    sc_signal< sc_lv<32> > child2_V_1_fu_294_p3;
    sc_signal< sc_lv<64> > child2_V_1_cast_fu_301_p1;
    sc_signal< sc_lv<1> > tmp_1_fu_311_p0;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<24> ap_const_lv24_400;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_child1_V_2_fu_266_p2();
    void thread_child1_V_cast_fu_262_p1();
    void thread_child1_V_fu_255_p3();
    void thread_child2_V_1_cast_fu_301_p1();
    void thread_child2_V_1_fu_294_p3();
    void thread_child2_V_2_fu_305_p2();
    void thread_exitcond1_fu_233_p2();
    void thread_exitcond_fu_272_p2();
    void thread_generatingDone();
    void thread_generatingDone_ap_vld();
    void thread_generation_child1();
    void thread_generation_child1_ap_vld();
    void thread_generation_child2();
    void thread_generation_child2_ap_vld();
    void thread_grp_read_fu_130_p2();
    void thread_j1_cast2_fu_284_p1();
    void thread_j_1_fu_239_p2();
    void thread_j_2_fu_278_p2();
    void thread_j_cast3_fu_245_p1();
    void thread_op2_assign_1_fu_288_p2();
    void thread_op2_assign_fu_249_p2();
    void thread_tmp_1_fu_311_p0();
    void thread_tmp_1_fu_311_p2();
    void thread_tmp_s_fu_227_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
